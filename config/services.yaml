# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.path.images: /uploads/images

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #  doctrine.orm.entity_listener

    storage.space.repository:
        class: App\Repository\StorageSpaceRepository

    storage.space.check.date:
        class: App\Service\StorageSpaceService

    storage.space.check.date.listener:
        class: App\EventListener\StorageSpaceListener
        arguments: 
            - "@storage.space.check.date"
            # - "@storage.space.repository"
        tags:
            - {
                name: kernel.event_listener,
                event: kernel.request,
                method: processStorage
            }

          
    booking.service:
        class: App\Service\BookingService

    booking.payement.ok.listener:
        class: App\EventListener\BookingListener
        arguments:
            - "@booking.service"
        tags:
            - {
                name: kernel.event_listener,
                event: kernel.request,
                method: processBooking
            }