{# {% extends "base.html.twig" %} #}

{# {% block title 'Voir une réservation précise' %} #}

{% block javascrpit2 %}
    <script src="https://js.stripe.com/v3/"></script>
{% endblock %}

{% block body %}

<div class="container">
    <section>
        <h1>voir ma réservation</h1>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Nom du produit</th>
                    <th scope="col">Adresse complet du produit</th>
                    <th scope="col">Type du produit</th>
                    <th scope="col">espace du produit</th>
                    <th scope="col">Propriétaire du produit</th>
                    <th scope="col">Prix/mois du produit</th>
                    <th scope="col">Date de création de la réservation</th>
                    <th scope="col">Date du début de la réservation</th>
                    <th scope="col">Date de fin de la réservation</th>
                    <th></th>
                </tr>
            </thead>

            

            <tbody>

                <tr>
                    <td>{{ booking.storageSpace.title }}</td>
                    <td>
                        {{ booking.storageSpace.adresse }}
                        {{ booking.storageSpace.postalCode }}
                        {{ booking.storageSpace.city }}
                    </td>
                    <td>{{ booking.storageSpace.type }}</td>
                    <td>{{ booking.storageSpace.space }} m2</td>
                    <td>
                        {{ booking.storageSpace.owner.firstName }}
                        {{ booking.storageSpace.owner.lastName }}
                    </td>
                    <td >{{ booking.storageSpace.priceByMonth }}€/mois</td>
                    <td>{{ booking.dateCreatedAt | date('d/m/Y H:i') }}</td>
                    <td>{{ booking.dateStartAt | date('d/m/Y') }}</td>

                    {% if booking.dateEndAt %}
                        <td>{{ booking.dateEndAt | date('d/m/Y') }}</td>
                    {% else %}
                            <td></td>
                    {% endif %}

                    {% if booking.pay == false %}
                        <input type='hidden' name='price' value="{{ booking.storageSpace.priceByMonth }}" id='price'>
                        <input type='hidden' name='booking' value="{{ booking.id }}" id='booking'>
                        <input type='hidden' name='storage' value="{{ booking.storageSpace.id }}" id='storage'>
                        <td ><button id="checkout-button">Payer la reservation</button></td>
                    {% endif %}

                    {# 
                        si la date du jour n'est pas égale ou n'a pas encore dépassé la date de début de la réservation, 
                        et que le storage est encore disponible,
                        ou que la réservation n'est pas encore payé
                        on permet la suppréssion de cette réservation,
                        passé la date, l'user ne pourra plus supprimer la réservation   
                    #}
                    {% if booking.storageSpace.available == true %}

                        {% if booking.dateStartAt > date() or booking.pay == false %}
                            <td>
                                <form method="POST" action="{{ path('booking_delete', { 'id' : booking.id }) }}" class="middle" onsubmit="return confirm('Etes-vous sur de vouloir annuler votre réservation ?')">
                                    <input type="hidden" name="_method" value="DELETE">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                                    <button> Annuler la réservation </button>
                                </form>
                            </td>
                        {% endif %}
                        
                    {% endif %}
                    
                </tr>
            </tbody>
        </table>
    </section>
</div>
{% endblock %}


{#  POUR ABONNEMENT #}

{% block script %}

<script type="text/javascript">

    var storage = document.getElementById("storage");
    var booking = document.getElementById("booking");
    var PriceId = document.getElementById("price");

    var stripe = Stripe("pk_test_51IWMatFt4LI0nktGFU4LeoUDWwAX14vyTzFYMWPd11q7ohJjoeFOoSCe6FeSVa5QigzkorWp5dqTe9VqjswDRwll00c5dMrO46");
  

    // Créer une session de paiement avec l'ID de plan sélectionné
    var createCheckoutSession = function(priceId) {
        return fetch("/commande/create-checkout-session/" + storage.value + "/" + booking.value, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                priceId: priceId
            })
        }).then(function(result) {
            return result.json();
        });
    };

    document
    .getElementById("checkout-button")
    .addEventListener("click", function(evt) {
        createCheckoutSession(PriceId.value).then(function(data) {
        // Call Stripe.js method to redirect to the new Checkout page
        stripe
            .redirectToCheckout({
            sessionId: data.id
            })
            .then(handleResult);
        });
    });
      
</script>

{% endblock %}

{#  POUR PAYEMENT UNIQUE

{% block script %}
    <script type="text/javascript">
    
        var storage = document.getElementById("storage");
        console.log(storage.value);
        var booking = document.getElementById("booking");
        console.log(booking.value);
        // Create an instance of the Stripe object with your publishable API key
        {# var stripe = Stripe("pk_test_TYooMQauvdEDq54NiTphI7jx"); # }
        var stripe = Stripe("pk_test_51IWMatFt4LI0nktGFU4LeoUDWwAX14vyTzFYMWPd11q7ohJjoeFOoSCe6FeSVa5QigzkorWp5dqTe9VqjswDRwll00c5dMrO46");
        var checkoutButton = document.getElementById("checkout-button");
        checkoutButton.addEventListener("click", function () {
            fetch("/commande/create-session/"+ storage.value + "/" + booking.value , {
                method: "POST",
            })
            .then(function (response) {
                return response.json();
                //console.log(response.text());
            })
            .then(function (session) {
                console.log(session);
                if(session.error == 'not_storage'){
                    window.location.replace(' {{ path("storage_space_all") }} ')
                }else{
                    return stripe.redirectToCheckout({ sessionId: session.id });
                }
                
            })
            .then(function (result) {
                // If redirectToCheckout fails due to a browser or network
                // error, you should display the localized error message to your
                // customer using error.message.
                if (result.error) {
                    alert(result.error.message);
                }
            })
            .catch(function (error) {
                console.log(error);
                console.error("Error:", error);
            });
        });
    </script>

{% endblock %} 
#}